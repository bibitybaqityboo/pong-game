{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Game settings\
const canvas = document.getElementById('gameCanvas');\
const ctx = canvas.getContext('2d');\
\
canvas.width = 800;\
canvas.height = 400;\
\
const paddleWidth = 10;\
const paddleHeight = 60;\
const ballSize = 8;\
\
// Game objects\
const player = \{\
    y: canvas.height / 2 - paddleHeight / 2,\
    score: 0\
\};\
\
const computer = \{\
    y: canvas.height / 2 - paddleHeight / 2,\
    score: 0\
\};\
\
const ball = \{\
    x: canvas.width / 2,\
    y: canvas.height / 2,\
    speed: 5,\
    velocityX: 5,\
    velocityY: 5,\
    reset: function() \{\
        this.x = canvas.width / 2;\
        this.y = canvas.height / 2;\
        this.velocityX = -this.velocityX;\
        this.speed = 5;\
    \}\
\};\
\
// Event listener for paddle movement\
canvas.addEventListener('mousemove', (e) => \{\
    const rect = canvas.getBoundingClientRect();\
    player.y = e.clientY - rect.top - paddleHeight / 2;\
\
    // Keep paddle within canvas bounds\
    if (player.y < 0) player.y = 0;\
    if (player.y > canvas.height - paddleHeight) player.y = canvas.height - paddleHeight;\
\});\
\
// Collision detection\
function collision(b, p) \{\
    return b.x < p.x + paddleWidth &&\
           b.x + ballSize > p.x &&\
           b.y < p.y + paddleHeight &&\
           b.y + ballSize > p.y;\
\}\
\
// Update game state\
function update() \{\
    // Move the ball\
    ball.x += ball.velocityX;\
    ball.y += ball.velocityY;\
\
    // Simple AI for computer paddle\
    computer.y += ((ball.y - (computer.y + paddleHeight/2))) * 0.1;\
\
    // Ball collision with top and bottom walls\
    if (ball.y < 0 || ball.y > canvas.height) \{\
        ball.velocityY = -ball.velocityY;\
    \}\
\
    // Determine which paddle is being hit by the ball\
    let paddle = (ball.x < canvas.width/2) ? player : computer;\
\
    // If ball hits a paddle\
    if (collision(ball, paddle)) \{\
        // Reverse ball direction\
        ball.velocityX = -ball.velocityX;\
\
        // Increase ball speed\
        ball.speed += 0.5;\
    \}\
\
    // Score points\
    if (ball.x < 0) \{\
        computer.score++;\
        document.getElementById('computerScore').textContent = computer.score;\
        ball.reset();\
    \} else if (ball.x > canvas.width) \{\
        player.score++;\
        document.getElementById('playerScore').textContent = player.score;\
        ball.reset();\
    \}\
\}\
\
// Draw game objects\
function draw() \{\
    // Clear canvas\
    ctx.fillStyle = 'black';\
    ctx.fillRect(0, 0, canvas.width, canvas.height);\
\
    // Draw paddles\
    ctx.fillStyle = 'white';\
    ctx.fillRect(0, player.y, paddleWidth, paddleHeight);\
    ctx.fillRect(canvas.width - paddleWidth, computer.y, paddleWidth, paddleHeight);\
\
    // Draw ball\
    ctx.beginPath();\
    ctx.arc(ball.x, ball.y, ballSize, 0, Math.PI * 2);\
    ctx.fillStyle = 'white';\
    ctx.fill();\
    ctx.closePath();\
\}\
\
// Game loop\
function gameLoop() \{\
    update();\
    draw();\
    requestAnimationFrame(gameLoop);\
\}\
\
// Start the game\
gameLoop();}